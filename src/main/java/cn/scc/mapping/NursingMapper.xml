<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scc.dao.NursingMapper">
  <resultMap id="BaseResultMap" type="cn.scc.entity.Nursing">
    <id column="nurNo" jdbcType="BIGINT" property="nurno" />
    <result column="nurName" jdbcType="VARCHAR" property="nurname" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="service" jdbcType="VARCHAR" property="service" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nurNo, nurName, price, describe, service, status
  </sql>
  <select id="selectByExample" parameterType="cn.scc.entity.NursingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nursing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nursing
    where nurNo = #{nurno,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nursing
    where nurNo = #{nurno,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.scc.entity.NursingExample">
    delete from nursing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.scc.entity.Nursing">
    insert into nursing (nurNo, nurName, price, 
      describe, service, status
      )
    values (#{nurno,jdbcType=BIGINT}, #{nurname,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{describe,jdbcType=VARCHAR}, #{service,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.scc.entity.Nursing">
    insert into nursing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nurno != null">
        nurNo,
      </if>
      <if test="nurname != null">
        nurName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="describe != null">
        describe,
      </if>
      <if test="service != null">
        service,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nurno != null">
        #{nurno,jdbcType=BIGINT},
      </if>
      <if test="nurname != null">
        #{nurname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="service != null">
        #{service,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.scc.entity.NursingExample" resultType="java.lang.Long">
    select count(*) from nursing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nursing
    <set>
      <if test="record.nurno != null">
        nurNo = #{record.nurno,jdbcType=BIGINT},
      </if>
      <if test="record.nurname != null">
        nurName = #{record.nurname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.service != null">
        service = #{record.service,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nursing
    set nurNo = #{record.nurno,jdbcType=BIGINT},
      nurName = #{record.nurname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      describe = #{record.describe,jdbcType=VARCHAR},
      service = #{record.service,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scc.entity.Nursing">
    update nursing
    <set>
      <if test="nurname != null">
        nurName = #{nurname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="service != null">
        service = #{service,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where nurNo = #{nurno,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scc.entity.Nursing">
    update nursing
    set nurName = #{nurname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      describe = #{describe,jdbcType=VARCHAR},
      service = #{service,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where nurNo = #{nurno,jdbcType=BIGINT}
  </update>
</mapper>