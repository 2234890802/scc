<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scc.dao.EgressMapper">
  <resultMap id="BaseResultMap" type="cn.scc.entity.Egress">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cusId" jdbcType="BIGINT" property="cusid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="egrDate" jdbcType="DATE" property="egrdate" />
    <result column="back" jdbcType="DATE" property="back" />
    <result column="companion" jdbcType="VARCHAR" property="companion" />
    <result column="relation" jdbcType="VARCHAR" property="relation" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="realReturn" jdbcType="DATE" property="realreturn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cusId, type, egrDate, back, companion, relation, phone, remark, realReturn
  </sql>
  <select id="selectByExample" parameterType="cn.scc.entity.EgressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from egress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from egress
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from egress
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.scc.entity.EgressExample">
    delete from egress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.scc.entity.Egress">
    insert into egress (id, cusId, type, 
      egrDate, back, companion, 
      relation, phone, remark, 
      realReturn)
    values (#{id,jdbcType=BIGINT}, #{cusid,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, 
      #{egrdate,jdbcType=DATE}, #{back,jdbcType=DATE}, #{companion,jdbcType=VARCHAR}, 
      #{relation,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{realreturn,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="cn.scc.entity.Egress">
    insert into egress
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cusid != null">
        cusId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="egrdate != null">
        egrDate,
      </if>
      <if test="back != null">
        back,
      </if>
      <if test="companion != null">
        companion,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="realreturn != null">
        realReturn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cusid != null">
        #{cusid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="egrdate != null">
        #{egrdate,jdbcType=DATE},
      </if>
      <if test="back != null">
        #{back,jdbcType=DATE},
      </if>
      <if test="companion != null">
        #{companion,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="realreturn != null">
        #{realreturn,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.scc.entity.EgressExample" resultType="java.lang.Long">
    select count(*) from egress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update egress
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cusid != null">
        cusId = #{record.cusid,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.egrdate != null">
        egrDate = #{record.egrdate,jdbcType=DATE},
      </if>
      <if test="record.back != null">
        back = #{record.back,jdbcType=DATE},
      </if>
      <if test="record.companion != null">
        companion = #{record.companion,jdbcType=VARCHAR},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.realreturn != null">
        realReturn = #{record.realreturn,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update egress
    set id = #{record.id,jdbcType=BIGINT},
      cusId = #{record.cusid,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      egrDate = #{record.egrdate,jdbcType=DATE},
      back = #{record.back,jdbcType=DATE},
      companion = #{record.companion,jdbcType=VARCHAR},
      relation = #{record.relation,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      realReturn = #{record.realreturn,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scc.entity.Egress">
    update egress
    <set>
      <if test="cusid != null">
        cusId = #{cusid,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="egrdate != null">
        egrDate = #{egrdate,jdbcType=DATE},
      </if>
      <if test="back != null">
        back = #{back,jdbcType=DATE},
      </if>
      <if test="companion != null">
        companion = #{companion,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="realreturn != null">
        realReturn = #{realreturn,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scc.entity.Egress">
    update egress
    set cusId = #{cusid,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      egrDate = #{egrdate,jdbcType=DATE},
      back = #{back,jdbcType=DATE},
      companion = #{companion,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      realReturn = #{realreturn,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>