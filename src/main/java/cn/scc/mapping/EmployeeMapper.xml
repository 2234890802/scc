<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scc.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.scc.entity.Employee">
    <id column="empId" jdbcType="BIGINT" property="empid" />
    <result column="empPwd" jdbcType="VARCHAR" property="emppwd" />
    <result column="empName" jdbcType="VARCHAR" property="empname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="empType" jdbcType="VARCHAR" property="emptype" />
    <result column="hiredate" jdbcType="DATE" property="hiredate" />
    <result column="duty" jdbcType="VARCHAR" property="duty" />
    <result column="dutyName" jdbcType="VARCHAR" property="dutyname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="power" jdbcType="VARCHAR" property="power" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    empId, empPwd, empName, sex, empType, hiredate, duty, dutyName, phone, introduction, 
    remark, power, status
  </sql>
  <select id="selectByExample" parameterType="cn.scc.entity.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where empId = #{empid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where empId = #{empid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.scc.entity.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.scc.entity.Employee">
    insert into employee (empId, empPwd, empName, 
      sex, empType, hiredate, 
      duty, dutyName, phone, 
      introduction, remark, power, 
      status)
    values (#{empid,jdbcType=BIGINT}, #{emppwd,jdbcType=VARCHAR}, #{empname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{emptype,jdbcType=VARCHAR}, #{hiredate,jdbcType=DATE}, 
      #{duty,jdbcType=VARCHAR}, #{dutyname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{power,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.scc.entity.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empid != null">
        empId,
      </if>
      <if test="emppwd != null">
        empPwd,
      </if>
      <if test="empname != null">
        empName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="emptype != null">
        empType,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="duty != null">
        duty,
      </if>
      <if test="dutyname != null">
        dutyName,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="power != null">
        power,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empid != null">
        #{empid,jdbcType=BIGINT},
      </if>
      <if test="emppwd != null">
        #{emppwd,jdbcType=VARCHAR},
      </if>
      <if test="empname != null">
        #{empname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="emptype != null">
        #{emptype,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=DATE},
      </if>
      <if test="duty != null">
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="dutyname != null">
        #{dutyname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        #{power,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.scc.entity.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.empid != null">
        empId = #{record.empid,jdbcType=BIGINT},
      </if>
      <if test="record.emppwd != null">
        empPwd = #{record.emppwd,jdbcType=VARCHAR},
      </if>
      <if test="record.empname != null">
        empName = #{record.empname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.emptype != null">
        empType = #{record.emptype,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=DATE},
      </if>
      <if test="record.duty != null">
        duty = #{record.duty,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyname != null">
        dutyName = #{record.dutyname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.power != null">
        power = #{record.power,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set empId = #{record.empid,jdbcType=BIGINT},
      empPwd = #{record.emppwd,jdbcType=VARCHAR},
      empName = #{record.empname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      empType = #{record.emptype,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=DATE},
      duty = #{record.duty,jdbcType=VARCHAR},
      dutyName = #{record.dutyname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      power = #{record.power,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scc.entity.Employee">
    update employee
    <set>
      <if test="emppwd != null">
        empPwd = #{emppwd,jdbcType=VARCHAR},
      </if>
      <if test="empname != null">
        empName = #{empname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="emptype != null">
        empType = #{emptype,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        hiredate = #{hiredate,jdbcType=DATE},
      </if>
      <if test="duty != null">
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="dutyname != null">
        dutyName = #{dutyname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where empId = #{empid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scc.entity.Employee">
    update employee
    set empPwd = #{emppwd,jdbcType=VARCHAR},
      empName = #{empname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      empType = #{emptype,jdbcType=VARCHAR},
      hiredate = #{hiredate,jdbcType=DATE},
      duty = #{duty,jdbcType=VARCHAR},
      dutyName = #{dutyname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      power = #{power,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where empId = #{empid,jdbcType=BIGINT}
  </update>
</mapper>